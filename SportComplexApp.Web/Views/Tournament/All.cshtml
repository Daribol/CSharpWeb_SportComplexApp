@using SportComplexApp.Web.ViewModels.Tournament
@model IEnumerable<TournamentViewModel>

@{
    ViewData["Title"] = "All Tournaments";
    var now = DateTime.Now;
}

<div class="container mt-4">
    <h2 class="mb-3 text-center" style="color:#00ffc8;">Upcoming Tournaments</h2>
    <hr class="mb-4" style="border-color: rgba(255,255,255,.08);" />

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Filters -->
    <div class="card card-dark border-0 shadow-sm mb-4">
        <div class="card-body">
            <form method="get" asp-controller="Tournament" asp-action="All" class="mb-2">
                <div class="row g-3 align-items-end">
                    <div class="col-md-5">
                        <label for="searchQuery" class="form-label text-light">Search by Name</label>
                        <input type="text" name="searchQuery" id="searchQuery" class="form-control neon-input" placeholder="E.g. Summer Cup..." />
                    </div>

                    <div class="col-md-5">
                        <label for="sport" class="form-label text-light">Filter by Sport</label>
                        <input type="text" name="sport" id="sport" class="form-control neon-input" placeholder="E.g. Football" />
                    </div>

                    <div class="col-md-2 d-grid">
                        <button type="submit" class="btn btn-outline-neon">
                            <i class="bi bi-funnel-fill"></i> Filter
                        </button>
                    </div>
                </div>
            </form>
            <div class="d-flex justify-content-end">
                <a asp-controller="Tournament" asp-action="All" class="btn btn-outline-neon btn-sm">
                    <i class="bi bi-x-circle"></i> Clear
                </a>
            </div>
        </div>
    </div>

    <!-- Grid -->
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var t in Model)
        {
            var status = t.EndDate < now ? "Finished" : (t.StartDate > now ? "Upcoming" : "Ongoing");
            var durationDays = Math.Max(1, (t.EndDate.Date - t.StartDate.Date).Days + 1);

            var imageProp = t.GetType().GetProperty("ImageUrl");
            var imageUrl = imageProp?.GetValue(t)?.ToString();

            <div class="col">
                <div class="card card-dark hover h-100 border-0">
                    @if (!string.IsNullOrWhiteSpace(imageUrl))
                    {
                        <div class="cover ratio ratio-16x9" style="background-image:url('@imageUrl');"></div>
                    }
                    else
                    {
                        <div class="cover cover--placeholder ratio ratio-16x9 d-flex align-items-center justify-content-center">
                            <i class="bi bi-trophy-fill display-6 text-muted"></i>
                        </div>
                    }

                    <div class="card-body d-flex flex-column">
                        <div class="d-flex align-items-start justify-content-between mb-2">
                            <h5 class="card-title mb-0">@t.Name</h5>
                            <span class="badge @(status=="Upcoming"?"badge-sport": status=="Ongoing"?"bg-success":"badge-soft")">
                                @status
                            </span>
                        </div>

                        <div class="mb-2">
                            <span class="badge badge-sport me-1">@t.Sport</span>
                            <span class="badge badge-soft">@durationDays d</span>
                        </div>

                        <ul class="list-unstyled small text-muted mb-3">
                            <li><i class="bi bi-calendar-event text-primary"></i> @t.StartDate.ToString("dd MMM yyyy") → @t.EndDate.ToString("dd MMM yyyy")</li>
                        </ul>

                        @if (!string.IsNullOrWhiteSpace(t.Description))
                        {
                            <p class="text-muted clamp-3 mb-0">@t.Description</p>
                        }

                        <div class="mt-3">
                            @if (!User.IsInRole("Trainer"))
                            {
                                <form asp-action="Register" asp-route-id="@t.Id" method="post">
                                    <button type="submit" class="btn btn-neon w-100">
                                        <i class="bi bi-pencil-square me-1"></i> Register
                                    </button>
                                </form>
                            }
                            else
                            {
                                <button class="btn btn-outline-neon btn-sm w-100" disabled>
                                    Trainers cannot register
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
